#!/usr/bin/env python
# ... or for debugging, use something like
#!/home/stephen/bin/gdbrun python

# Compiler wrapper for libcrunch.
import os, sys, re, subprocess, tempfile

# HACK
if "LIBALLOCS" in os.environ:
    liballocs_base = os.path.realpath(os.environ["LIBALLOCS"])
else:
    liballocs_base = os.path.realpath(os.path.dirname(sys.argv[0]) + "/../../../../liballocs/")
sys.path.append(liballocs_base + "/tools")
sys.path.append(liballocs_base + "/tools/lang/c/lib")
from allocscc import AllocsCC
sys.path.append(os.path.realpath(os.path.dirname(__file__) + "/../lib"))
from crunchcc import CrunchCC

class CrunchXCC(CrunchCC):
        
    def getCillyArgs(self, sourceFiles):
        # PROBLEM: we only want to -include if we're compiling a C file. 
        # Note that normally cilly will figure out when we're compiling
        # a .S file, say, and only pass options that are relevant. But
        # it would be asking too much in this case. 
        
        allSourceFilesAreC = True
        for sourceFile in sourceFiles:
            if sourceFile.lang != "c" and not sourceFile.endswith(".c"):
                allSourceFilesAreC = False
        
        includeArgs = []
#            "--load=%s" % (os.path.dirname(sys.argv[0]) + "/../vsimplemem/vsimplemem.cmxs"), "--dovsimpleMem", \
#            "--load=%s" % (os.path.dirname(sys.argv[0]) + "/../vsimpleaddr/vsimpleaddr.cmxs"), "--dovsimpleAddr", \

        if len(sourceFiles) > 0 and allSourceFilesAreC:
            # We can only do trumptr, and anything else that involves -include, 
            # if we're compiling only C files.
            # Add temporary HACK to strip line numbers after preprocess
            includeArgs = [ \
            "--commPrintLn", \
            "-include", self.getLibAllocsBaseDir() + "/include/uniqtype.h", \
            "-DLIBCRUNCH_USING_TRAP_PTRS", \
            "-include", \
                os.path.dirname(__file__) + "/../../../include/libcrunch_cil_inlines.h", \
            "--load=%s" % (os.path.dirname(sys.argv[0]) + "/../crunchbound/crunchbound.cmxs"), "--docrunchbound", \
            "--load=%s" % (os.path.dirname(sys.argv[0]) + "/../trumptr/trumptr.cmxs"), "--dotrumptr" \
            ]
#            "--load=%s" % (os.path.dirname(sys.argv[0]) + "/../vsimplemem/vsimplemem.cmxs"), "--dovsimpleMem", \
        else:
            self.debugMsg("No source files, or not all (only %d) are C files\n" % len(sourceFiles))
        
        # do dumpallocs et al *and* trumptr
        return AllocsCC.getCillyArgs(self, sourceFiles) + \
            ["--keepunused"] \
            + includeArgs + \
            ["-Wno-unused-variable", "-Wno-unused-label"]
            # We need the above -Wno-unused-... because CIL creates
            # some unused stuff (unavoidably, I believe) which will
            # make compilation done with -Werror barf if we don't
            # silence them.

if __name__ == '__main__':
    wrapper = CrunchXCC()
    ret = wrapper.main()
    exit(ret)

