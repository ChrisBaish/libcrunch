# This Makefile maintains a repository of allocation site
# metadata, shadowing libraries and executables in the system,
# similar to the /usr/lib/debug hierarchy. 

ALLOCSITES_BASE := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))/allocsites
$(warning ALLOCSITES_BASE is $(ALLOCSITES_BASE))
CALLER_RELATIVE_ALLOCSITES_BASE := $(shell find -follow -samefile "$(ALLOCSITES_BASE)" | head -n1 | sed 's|^./||')
$(warning CALLER_RELATIVE_ALLOCSITES_BASE is $(CALLER_RELATIVE_ALLOCSITES_BASE))

OBJDUMPALLOCS ?= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))/objdumpallocs
OBJDEPS ?= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))/objdeps
UNIQTYPES ?= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))/uniqtypes
LDD_FUNCS ?= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))/ldd-funcs.sh
MERGE_ALLOCS ?= $(realpath $(dir $(lastword $(MAKEFILE_LIST))))/merge-allocs.sh

# By default, remake everything we have already made,
# but don't make new .allocsites files.
default: $(shell find $(ALLOCSITES_BASE) -type f -name '*.allocsites*' ! -name 'Makefile.allocsites' )

# Remaking a .allocsites file from the analogous file 
# in the system.
prefix_exactly_one_slash = $(shell echo "$1" | sed 's|^/*\(.*\)|/\1|' )
$(warning $(CALLER_RELATIVE_ALLOCSITES_BASE)/usr/local/src/git-1.7.5.4/git depends on $(call prefix_exactly_one_slash,usr/local/src/git-1.7.5.4/git))
$(CALLER_RELATIVE_ALLOCSITES_BASE)/%.allocsites: $(call prefix_exactly_one_slash,%)
	mkdir -p $$(dirname "$@")
	$(OBJDUMPALLOCS) "$<" | sed "s|.*|$<\t&|" > "$@"

# We also know how to build a lib%-uniqtypes.so for each executable.
# Which allocsites files does an executable's uniqtypes depend on?
depend = $(shell $(OBJDEPS) "$1" 2>/dev/null | cut -f1 )

# Note that $1 is always '/'-prefixed here, so we don't insert another L-- here
allocsites_from_obj = $(patsubst %,$(CALLER_RELATIVE_ALLOCSITES_BASE)%.allocsites,$1)

all_allocsites_for_obj = $(foreach f,$1 $(call depend,$1),$(call allocsites_from_obj,$(f)))
#$(warning /usr/local/src/git-1.7.5.4/git has allocsites $(call all_allocsites_for_obj,/usr/local/src/git-1.7.5.4/git))
# Merge the allocsites from each object into a single file,
# where we also look for dumpallocs-generated allocs files in the build dir.
$(CALLER_RELATIVE_ALLOCSITES_BASE)/%.allallocs: $(call all_allocsites_for_obj,/%)
	mkdir -p $$(dirname "$@")
	cat $+ | $(MERGE_ALLOCS) > "$@" 2>"$@.rej"

# Now we can build the uniqtypes library
$(CALLER_RELATIVE_ALLOCSITES_BASE)/%-uniqtypes.c: $(CALLER_RELATIVE_ALLOCSITES_BASE)/%.allallocs uniqtypes
	$(UNIQTYPES) "$<" > "$@"
	
# We need to define macros for the load addrs of each library
$(CALLER_RELATIVE_ALLOCSITES_BASE)/%-uniqtypes.so: $(CALLER_RELATIVE_ALLOCSITES_BASE)/%-uniqtypes.c
	$(CC) -shared \
	$$( . $(LDD_FUNCS) && obj_load_addrs_as_cpp_macros /"$*" ) \
	-o "$@" "$<"
